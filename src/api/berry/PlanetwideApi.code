[{"Name":"PlanetwideApi","SourceText":"// <auto-generated/>\n#nullable enable\n\nnamespace Microsoft.Extensions.DependencyInjection\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public static partial class PlanetwideApiServiceCollectionExtensions\r\n    {\r\n        public static global::StrawberryShake.IClientBuilder<global::Planetwide.Blazor.Ui.Data.Api.State.PlanetwideApiStoreAccessor> AddPlanetwideApi(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)\r\n        {\r\n            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>\r\n            {\r\n                ConfigureClientDefault(sp, serviceCollection, strategy);\r\n                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));\r\n            });\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::Planetwide.Blazor.Ui.Data.Api.State.PlanetwideApiStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.ListMembersQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.PlanetwideApi>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.IPlanetwideApi>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));\r\n            return new global::StrawberryShake.ClientBuilder<global::Planetwide.Blazor.Ui.Data.Api.State.PlanetwideApiStoreAccessor>(\"PlanetwideApi\", services, serviceCollection);\r\n        }\r\n\r\n        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)\r\n        {\r\n            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>\r\n            {\r\n                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);\r\n                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient(\"PlanetwideApi\"));\r\n            });\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity, global::Planetwide.Blazor.Ui.Data.Api.ListMembers_Members_Nodes_Member>, global::Planetwide.Blazor.Ui.Data.Api.State.ListMembers_Members_Nodes_MemberFromMemberEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, global::Planetwide.Blazor.Ui.Data.Api.ListMembers_Members_Nodes_Accounts_Account>, global::Planetwide.Blazor.Ui.Data.Api.State.ListMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>, global::Planetwide.Blazor.Ui.Data.Api.State.ListMembersResultFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>, global::Planetwide.Blazor.Ui.Data.Api.State.ListMembersBuilder>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Planetwide.Blazor.Ui.Data.Api.ListMembersQuery>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.ListMembersQuery>(sp));\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::Planetwide.Blazor.Ui.Data.Api.State.PlanetwideApiEntityIdFactory>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Planetwide.Blazor.Ui.Data.Api.PlanetwideApi>(services);\r\n            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Planetwide.Blazor.Ui.Data.Api.IPlanetwideApi>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Planetwide.Blazor.Ui.Data.Api.PlanetwideApi>(sp));\r\n            return services;\r\n        }\r\n\r\n        private class ClientServiceProvider : System.IServiceProvider, System.IDisposable\r\n        {\r\n            private readonly System.IServiceProvider _provider;\r\n            public ClientServiceProvider(System.IServiceProvider provider)\r\n            {\r\n                _provider = provider;\r\n            }\r\n\r\n            public object? GetService(System.Type serviceType)\r\n            {\r\n                return _provider.GetService(serviceType);\r\n            }\r\n\r\n            public void Dispose()\r\n            {\r\n                if (_provider is System.IDisposable d)\r\n                {\r\n                    d.Dispose();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nnamespace Planetwide.Blazor.Ui.Data.Api\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersResult : global::System.IEquatable<ListMembersResult>, IListMembersResult\r\n    {\r\n        public ListMembersResult(global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members? members)\r\n        {\r\n            Members = members;\r\n        }\r\n\r\n        public global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members? Members { get; }\r\n\r\n        public virtual global::System.Boolean Equals(ListMembersResult? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (((Members is null && other.Members is null) || Members != null && Members.Equals(other.Members)));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((ListMembersResult)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Members != null)\r\n                {\r\n                    hash ^= 397 * Members.GetHashCode();\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\n    /// A connection to a list of items.\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembers_Members_MembersConnection : global::System.IEquatable<ListMembers_Members_MembersConnection>, IListMembers_Members_MembersConnection\r\n    {\r\n        public ListMembers_Members_MembersConnection(global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes>? nodes)\r\n        {\r\n            Nodes = nodes;\r\n        }\r\n\r\n        /// <summary>\n        /// A flattened list of the nodes.\n        /// </summary>\n        public global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes>? Nodes { get; }\r\n\r\n        public virtual global::System.Boolean Equals(ListMembers_Members_MembersConnection? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Nodes, other.Nodes));\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((ListMembers_Members_MembersConnection)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                if (Nodes != null)\r\n                {\r\n                    foreach (var Nodes_elm in Nodes)\r\n                    {\r\n                        hash ^= 397 * Nodes_elm.GetHashCode();\r\n                    }\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembers_Members_Nodes_Member : global::System.IEquatable<ListMembers_Members_Nodes_Member>, IListMembers_Members_Nodes_Member\r\n    {\r\n        public ListMembers_Members_Nodes_Member(global::System.Int32 id, global::System.String? firstname, global::System.String? surname, global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>? accounts)\r\n        {\r\n            Id = id;\r\n            Firstname = firstname;\r\n            Surname = surname;\r\n            Accounts = accounts;\r\n        }\r\n\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String? Firstname { get; }\r\n\r\n        public global::System.String? Surname { get; }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>? Accounts { get; }\r\n\r\n        public virtual global::System.Boolean Equals(ListMembers_Members_Nodes_Member? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id == other.Id) && ((Firstname is null && other.Firstname is null) || Firstname != null && Firstname.Equals(other.Firstname)) && ((Surname is null && other.Surname is null) || Surname != null && Surname.Equals(other.Surname)) && global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Accounts, other.Accounts);\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((ListMembers_Members_Nodes_Member)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                if (Firstname != null)\r\n                {\r\n                    hash ^= 397 * Firstname.GetHashCode();\r\n                }\r\n\r\n                if (Surname != null)\r\n                {\r\n                    hash ^= 397 * Surname.GetHashCode();\r\n                }\r\n\r\n                if (Accounts != null)\r\n                {\r\n                    foreach (var Accounts_elm in Accounts)\r\n                    {\r\n                        if (Accounts_elm != null)\r\n                        {\r\n                            hash ^= 397 * Accounts_elm.GetHashCode();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembers_Members_Nodes_Accounts_Account : global::System.IEquatable<ListMembers_Members_Nodes_Accounts_Account>, IListMembers_Members_Nodes_Accounts_Account\r\n    {\r\n        public ListMembers_Members_Nodes_Accounts_Account(global::System.Int32 id, global::System.String iban, global::System.Decimal balance)\r\n        {\r\n            Id = id;\r\n            Iban = iban;\r\n            Balance = balance;\r\n        }\r\n\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String Iban { get; }\r\n\r\n        public global::System.Decimal Balance { get; }\r\n\r\n        public virtual global::System.Boolean Equals(ListMembers_Members_Nodes_Accounts_Account? other)\r\n        {\r\n            if (ReferenceEquals(null, other))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, other))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (other.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return (Id == other.Id) && Iban.Equals(other.Iban) && Balance == other.Balance;\r\n        }\r\n\r\n        public override global::System.Boolean Equals(global::System.Object? obj)\r\n        {\r\n            if (ReferenceEquals(null, obj))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            if (ReferenceEquals(this, obj))\r\n            {\r\n                return true;\r\n            }\r\n\r\n            if (obj.GetType() != GetType())\r\n            {\r\n                return false;\r\n            }\r\n\r\n            return Equals((ListMembers_Members_Nodes_Accounts_Account)obj);\r\n        }\r\n\r\n        public override global::System.Int32 GetHashCode()\r\n        {\r\n            unchecked\r\n            {\r\n                int hash = 5;\r\n                hash ^= 397 * Id.GetHashCode();\r\n                hash ^= 397 * Iban.GetHashCode();\r\n                hash ^= 397 * Balance.GetHashCode();\r\n                return hash;\r\n            }\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembersResult\r\n    {\r\n        public global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members? Members { get; }\r\n    }\r\n\r\n    /// <summary>\n    /// A connection to a list of items.\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members\r\n    {\r\n        /// <summary>\n        /// A flattened list of the nodes.\n        /// </summary>\n        public global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes>? Nodes { get; }\r\n    }\r\n\r\n    /// <summary>\n    /// A connection to a list of items.\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members_MembersConnection : IListMembers_Members\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members_Nodes\r\n    {\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String? Firstname { get; }\r\n\r\n        public global::System.String? Surname { get; }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>? Accounts { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members_Nodes_Member : IListMembers_Members_Nodes\r\n    {\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members_Nodes_Accounts\r\n    {\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String Iban { get; }\r\n\r\n        public global::System.Decimal Balance { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembers_Members_Nodes_Accounts_Account : IListMembers_Members_Nodes_Accounts\r\n    {\r\n    }\r\n\r\n    /// <summary>\n    /// Represents the operation service of the ListMembers GraphQL operation\n    /// <code>\n    /// query ListMembers {\n    ///   members {\n    ///     __typename\n    ///     nodes {\n    ///       __typename\n    ///       id\n    ///       firstname\n    ///       surname\n    ///       accounts {\n    ///         __typename\n    ///         id\n    ///         iban\n    ///         balance\n    ///         ... on Account {\n    ///           id\n    ///         }\n    ///       }\n    ///       ... on Member {\n    ///         id\n    ///       }\n    ///     }\n    ///   }\n    /// }\n    /// </code>\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersQueryDocument : global::StrawberryShake.IDocument\r\n    {\r\n        private ListMembersQueryDocument()\r\n        {\r\n        }\r\n\r\n        public static ListMembersQueryDocument Instance { get; } = new ListMembersQueryDocument();\r\n        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;\r\n        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x20, 0x7b, 0x20, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x69, 0x62, 0x61, 0x6e, 0x20, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};\r\n        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash(\"md5Hash\", \"d42d404da69f5b85e3a4a175528d0e7b\");\r\n        public override global::System.String ToString()\r\n        {\r\n#if NETSTANDARD2_0\r\n        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());\n#else\r\n            return global::System.Text.Encoding.UTF8.GetString(Body);\r\n#endif\r\n        }\r\n    }\r\n\r\n    /// <summary>\n    /// Represents the operation service of the ListMembers GraphQL operation\n    /// <code>\n    /// query ListMembers {\n    ///   members {\n    ///     __typename\n    ///     nodes {\n    ///       __typename\n    ///       id\n    ///       firstname\n    ///       surname\n    ///       accounts {\n    ///         __typename\n    ///         id\n    ///         iban\n    ///         balance\n    ///         ... on Account {\n    ///           id\n    ///         }\n    ///       }\n    ///       ... on Member {\n    ///         id\n    ///       }\n    ///     }\n    ///   }\n    /// }\n    /// </code>\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersQuery : global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery\r\n    {\r\n        private readonly global::StrawberryShake.IOperationExecutor<IListMembersResult> _operationExecutor;\r\n        public ListMembersQuery(global::StrawberryShake.IOperationExecutor<IListMembersResult> operationExecutor)\r\n        {\r\n            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IListMembersResult);\r\n        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IListMembersResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default)\r\n        {\r\n            var request = CreateRequest();\r\n            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);\r\n        }\r\n\r\n        public global::System.IObservable<global::StrawberryShake.IOperationResult<IListMembersResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null)\r\n        {\r\n            var request = CreateRequest();\r\n            return _operationExecutor.Watch(request, strategy);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest()\r\n        {\r\n            return CreateRequest(null);\r\n        }\r\n\r\n        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return new global::StrawberryShake.OperationRequest(id: ListMembersQueryDocument.Instance.Hash.Value, name: \"ListMembers\", document: ListMembersQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default);\r\n        }\r\n\r\n        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)\r\n        {\r\n            return CreateRequest();\r\n        }\r\n    }\r\n\r\n    /// <summary>\n    /// Represents the operation service of the ListMembers GraphQL operation\n    /// <code>\n    /// query ListMembers {\n    ///   members {\n    ///     __typename\n    ///     nodes {\n    ///       __typename\n    ///       id\n    ///       firstname\n    ///       surname\n    ///       accounts {\n    ///         __typename\n    ///         id\n    ///         iban\n    ///         balance\n    ///         ... on Account {\n    ///           id\n    ///         }\n    ///       }\n    ///       ... on Member {\n    ///         id\n    ///       }\n    ///     }\n    ///   }\n    /// }\n    /// </code>\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IListMembersQuery : global::StrawberryShake.IOperationRequestFactory\r\n    {\r\n        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IListMembersResult>> ExecuteAsync(global::System.Threading.CancellationToken cancellationToken = default);\r\n        global::System.IObservable<global::StrawberryShake.IOperationResult<IListMembersResult>> Watch(global::StrawberryShake.ExecutionStrategy? strategy = null);\r\n    }\r\n\r\n    /// <summary>\n    /// Represents the PlanetwideApi GraphQL client\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class PlanetwideApi : global::Planetwide.Blazor.Ui.Data.Api.IPlanetwideApi\r\n    {\r\n        private readonly global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery _listMembers;\r\n        public PlanetwideApi(global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery listMembers)\r\n        {\r\n            _listMembers = listMembers ?? throw new global::System.ArgumentNullException(nameof(listMembers));\r\n        }\r\n\r\n        public static global::System.String ClientName => \"PlanetwideApi\";\r\n        public global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery ListMembers => _listMembers;\r\n    }\r\n\r\n    /// <summary>\n    /// Represents the PlanetwideApi GraphQL client\n    /// </summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial interface IPlanetwideApi\r\n    {\r\n        global::Planetwide.Blazor.Ui.Data.Api.IListMembersQuery ListMembers { get; }\r\n    }\r\n}\r\n\r\nnamespace Planetwide.Blazor.Ui.Data.Api.State\r\n{\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class MemberEntity\r\n    {\r\n        public MemberEntity(global::System.Int32 id = default !, global::System.String? firstname = default !, global::System.String? surname = default !, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? accounts = default !)\r\n        {\r\n            Id = id;\r\n            Firstname = firstname;\r\n            Surname = surname;\r\n            Accounts = accounts;\r\n        }\r\n\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String? Firstname { get; }\r\n\r\n        public global::System.String? Surname { get; }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? Accounts { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class AccountEntity\r\n    {\r\n        public AccountEntity(global::System.Int32 id = default !, global::System.String iban = default !, global::System.Decimal balance = default !)\r\n        {\r\n            Id = id;\r\n            Iban = iban;\r\n            Balance = balance;\r\n        }\r\n\r\n        public global::System.Int32 Id { get; }\r\n\r\n        public global::System.String Iban { get; }\r\n\r\n        public global::System.Decimal Balance { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::Planetwide.Blazor.Ui.Data.Api.ListMembersResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity, ListMembers_Members_Nodes_Member> _listMembers_Members_Nodes_MemberFromMemberEntityMapper;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, ListMembers_Members_Nodes_Accounts_Account> _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper;\r\n        public ListMembersResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity, ListMembers_Members_Nodes_Member> listMembers_Members_Nodes_MemberFromMemberEntityMapper, global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, ListMembers_Members_Nodes_Accounts_Account> listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _listMembers_Members_Nodes_MemberFromMemberEntityMapper = listMembers_Members_Nodes_MemberFromMemberEntityMapper ?? throw new global::System.ArgumentNullException(nameof(listMembers_Members_Nodes_MemberFromMemberEntityMapper));\r\n            _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper = listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper ?? throw new global::System.ArgumentNullException(nameof(listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper));\r\n        }\r\n\r\n        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult);\r\n        public ListMembersResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            if (dataInfo is ListMembersResultInfo info)\r\n            {\r\n                return new ListMembersResult(MapIListMembers_Members(info.Members, snapshot));\r\n            }\r\n\r\n            throw new global::System.ArgumentException(\"ListMembersResultInfo expected.\");\r\n        }\r\n\r\n        private global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members? MapIListMembers_Members(global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (data is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            IListMembers_Members returnValue = default !;\r\n            if (data?.__typename.Equals(\"MembersConnection\", global::System.StringComparison.Ordinal) ?? false)\r\n            {\r\n                returnValue = new ListMembers_Members_MembersConnection(MapIListMembers_Members_NodesNonNullableArray(data.Nodes, snapshot));\r\n            }\r\n            else\r\n            {\r\n                throw new global::System.NotSupportedException();\r\n            }\r\n\r\n            return returnValue;\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes>? MapIListMembers_Members_NodesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var members = new global::System.Collections.Generic.List<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes>();\r\n            foreach (global::StrawberryShake.EntityId child in list)\r\n            {\r\n                members.Add(MapNonNullableIListMembers_Members_Nodes(child, snapshot));\r\n            }\r\n\r\n            return members;\r\n        }\r\n\r\n        private global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes MapNonNullableIListMembers_Members_Nodes(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId.Name.Equals(\"Member\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _listMembers_Members_Nodes_MemberFromMemberEntityMapper.Map(snapshot.GetEntity<global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>? MapIListMembers_Members_Nodes_AccountsArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var accounts = new global::System.Collections.Generic.List<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>();\r\n            foreach (global::StrawberryShake.EntityId? child in list)\r\n            {\r\n                accounts.Add(MapIListMembers_Members_Nodes_Accounts(child, snapshot));\r\n            }\r\n\r\n            return accounts;\r\n        }\r\n\r\n        private global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts? MapIListMembers_Members_Nodes_Accounts(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"Account\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper.Map(snapshot.GetEntity<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)\r\n        {\r\n            return Create(dataInfo, snapshot);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersResultInfo : global::StrawberryShake.IOperationResultDataInfo\r\n    {\r\n        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;\r\n        private readonly global::System.UInt64 _version;\r\n        public ListMembersResultInfo(global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData? members, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)\r\n        {\r\n            Members = members;\r\n            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));\r\n            _version = version;\r\n        }\r\n\r\n        public global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData? Members { get; }\r\n\r\n        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;\r\n        public global::System.UInt64 Version => _version;\r\n        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)\r\n        {\r\n            return new ListMembersResultInfo(Members, _entityIds, version);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembers_Members_Nodes_MemberFromMemberEntityMapper : global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity, ListMembers_Members_Nodes_Member>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, ListMembers_Members_Nodes_Accounts_Account> _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper;\r\n        public ListMembers_Members_Nodes_MemberFromMemberEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, ListMembers_Members_Nodes_Accounts_Account> listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper = listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper ?? throw new global::System.ArgumentNullException(nameof(listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper));\r\n        }\r\n\r\n        public ListMembers_Members_Nodes_Member Map(global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new ListMembers_Members_Nodes_Member(entity.Id, entity.Firstname, entity.Surname, MapIListMembers_Members_Nodes_AccountsArray(entity.Accounts, snapshot));\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>? MapIListMembers_Members_Nodes_AccountsArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (list is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var accounts = new global::System.Collections.Generic.List<global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts?>();\r\n            foreach (global::StrawberryShake.EntityId? child in list)\r\n            {\r\n                accounts.Add(MapIListMembers_Members_Nodes_Accounts(child, snapshot));\r\n            }\r\n\r\n            return accounts;\r\n        }\r\n\r\n        private global::Planetwide.Blazor.Ui.Data.Api.IListMembers_Members_Nodes_Accounts? MapIListMembers_Members_Nodes_Accounts(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)\r\n        {\r\n            if (entityId is null)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            if (entityId.Value.Name.Equals(\"Account\", global::System.StringComparison.Ordinal))\r\n            {\r\n                return _listMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper.Map(snapshot.GetEntity<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper : global::StrawberryShake.IEntityMapper<global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity, ListMembers_Members_Nodes_Accounts_Account>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        public ListMembers_Members_Nodes_Accounts_AccountFromAccountEntityMapper(global::StrawberryShake.IEntityStore entityStore)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n        }\r\n\r\n        public ListMembers_Members_Nodes_Accounts_Account Map(global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)\r\n        {\r\n            if (snapshot is null)\r\n            {\r\n                snapshot = _entityStore.CurrentSnapshot;\r\n            }\r\n\r\n            return new ListMembers_Members_Nodes_Accounts_Account(entity.Id, entity.Iban, entity.Balance);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class ListMembersBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult>\r\n    {\r\n        private readonly global::StrawberryShake.IEntityStore _entityStore;\r\n        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;\r\n        private readonly global::StrawberryShake.IOperationResultDataFactory<global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult> _resultDataFactory;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;\r\n        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Decimal, global::System.Decimal> _decimalParser;\r\n        public ListMembersBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::Planetwide.Blazor.Ui.Data.Api.IListMembersResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)\r\n        {\r\n            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));\r\n            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));\r\n            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));\r\n            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>(\"Int\") ?? throw new global::System.ArgumentException(\"No serializer for type `Int` found.\");\r\n            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>(\"String\") ?? throw new global::System.ArgumentException(\"No serializer for type `String` found.\");\r\n            _decimalParser = serializerResolver.GetLeafValueParser<global::System.Decimal, global::System.Decimal>(\"Decimal\") ?? throw new global::System.ArgumentException(\"No serializer for type `Decimal` found.\");\r\n        }\r\n\r\n        public global::StrawberryShake.IOperationResult<IListMembersResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)\r\n        {\r\n            (IListMembersResult Result, ListMembersResultInfo Info)? data = null;\r\n            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;\r\n            if (response.Exception is null)\r\n            {\r\n                try\r\n                {\r\n                    if (response.Body != null)\r\n                    {\r\n                        if (response.Body.RootElement.TryGetProperty(\"data\", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)\r\n                        {\r\n                            data = BuildData(dataElement);\r\n                        }\r\n\r\n                        if (response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                        {\r\n                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                        }\r\n                    }\r\n                }\r\n                catch (global::System.Exception ex)\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{\"body\", response.Body?.RootElement.ToString()}})};\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (response.Body != null && response.Body.RootElement.TryGetProperty(\"errors\", out global::System.Text.Json.JsonElement errorsElement))\r\n                {\r\n                    errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);\r\n                }\r\n                else\r\n                {\r\n                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{\"body\", response.Body?.RootElement.ToString()}})};\r\n                }\r\n            }\r\n\r\n            return new global::StrawberryShake.OperationResult<IListMembersResult>(data?.Result, data?.Info, _resultDataFactory, errors);\r\n        }\r\n\r\n        private (IListMembersResult, ListMembersResultInfo) BuildData(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();\r\n            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;\r\n            global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData? membersId = default !;\r\n            _entityStore.Update(session =>\r\n            {\r\n                membersId = DeserializeIListMembers_Members(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"members\"), entityIds);\r\n                snapshot = session.CurrentSnapshot;\r\n            });\r\n            var resultInfo = new ListMembersResultInfo(membersId, entityIds, snapshot.Version);\r\n            return (_resultDataFactory.Create(resultInfo), resultInfo);\r\n        }\r\n\r\n        private global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData? DeserializeIListMembers_Members(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var typename = obj.Value.GetProperty(\"__typename\").GetString();\r\n            if (typename?.Equals(\"MembersConnection\", global::System.StringComparison.Ordinal) ?? false)\r\n            {\r\n                return new global::Planetwide.Blazor.Ui.Data.Api.State.MembersConnectionData(typename, nodes: UpdateIListMembers_Members_NodesEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"nodes\"), entityIds));\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? UpdateIListMembers_Members_NodesEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var members = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();\r\n            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())\r\n            {\r\n                members.Add(UpdateNonNullableIListMembers_Members_NodesEntity(session, child, entityIds));\r\n            }\r\n\r\n            return members;\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId UpdateNonNullableIListMembers_Members_NodesEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"Member\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstname\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"surname\")), UpdateIListMembers_Members_Nodes_AccountsEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"accounts\"), entityIds)));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::Planetwide.Blazor.Ui.Data.Api.State.MemberEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"firstname\")), DeserializeString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"surname\")), UpdateIListMembers_Members_Nodes_AccountsEntityArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"accounts\"), entityIds)));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _intParser.Parse(obj.Value.GetInt32()!);\r\n        }\r\n\r\n        private global::System.String? DeserializeString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId?>? UpdateIListMembers_Members_Nodes_AccountsEntityArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            var accounts = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId?>();\r\n            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())\r\n            {\r\n                accounts.Add(UpdateIListMembers_Members_Nodes_AccountsEntity(session, child, entityIds));\r\n            }\r\n\r\n            return accounts;\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId? UpdateIListMembers_Members_Nodes_AccountsEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                return null;\r\n            }\r\n\r\n            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);\r\n            entityIds.Add(entityId);\r\n            if (entityId.Name.Equals(\"Account\", global::System.StringComparison.Ordinal))\r\n            {\r\n                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity? entity))\r\n                {\r\n                    session.SetEntity(entityId, new global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"iban\")), DeserializeNonNullableDecimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"balance\"))));\r\n                }\r\n                else\r\n                {\r\n                    session.SetEntity(entityId, new global::Planetwide.Blazor.Ui.Data.Api.State.AccountEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"id\")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"iban\")), DeserializeNonNullableDecimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, \"balance\"))));\r\n                }\r\n\r\n                return entityId;\r\n            }\r\n\r\n            throw new global::System.NotSupportedException();\r\n        }\r\n\r\n        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _stringParser.Parse(obj.Value.GetString()!);\r\n        }\r\n\r\n        private global::System.Decimal DeserializeNonNullableDecimal(global::System.Text.Json.JsonElement? obj)\r\n        {\r\n            if (!obj.HasValue)\r\n            {\r\n                throw new global::System.ArgumentNullException();\r\n            }\r\n\r\n            return _decimalParser.Parse(obj.Value.GetDecimal()!);\r\n        }\r\n    }\r\n\r\n    ///<summary>A connection to a list of items.</summary>\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class MembersConnectionData\r\n    {\r\n        public MembersConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? nodes = default !)\r\n        {\r\n            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));\r\n            Nodes = nodes;\r\n        }\r\n\r\n        public global::System.String __typename { get; }\r\n\r\n        ///<summary>A flattened list of the nodes.</summary>\n        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? Nodes { get; }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class PlanetwideApiEntityIdFactory : global::StrawberryShake.IEntityIdSerializer\r\n    {\r\n        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()\r\n        {Indented = false};\r\n        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)\r\n        {\r\n            global::System.String __typename = obj.GetProperty(\"__typename\").GetString()!;\r\n            return __typename switch\r\n            {\r\n                \"Member\" => ParseMemberEntityId(obj, __typename),\r\n                \"Account\" => ParseAccountEntityId(obj, __typename),\r\n                _ => throw new global::System.NotSupportedException()};\r\n        }\r\n\r\n        public global::System.String Format(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            return entityId.Name switch\r\n            {\r\n                \"Member\" => FormatMemberEntityId(entityId),\r\n                \"Account\" => FormatAccountEntityId(entityId),\r\n                _ => throw new global::System.NotSupportedException()};\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseMemberEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetInt32()!);\r\n        }\r\n\r\n        private global::System.String FormatMemberEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteNumber(\"id\", (global::System.Int32)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n\r\n        private global::StrawberryShake.EntityId ParseAccountEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)\r\n        {\r\n            return new global::StrawberryShake.EntityId(type, obj.GetProperty(\"id\").GetInt32()!);\r\n        }\r\n\r\n        private global::System.String FormatAccountEntityId(global::StrawberryShake.EntityId entityId)\r\n        {\r\n            using var writer = new global::StrawberryShake.Internal.ArrayWriter();\r\n            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);\r\n            jsonWriter.WriteStartObject();\r\n            jsonWriter.WriteString(\"__typename\", entityId.Name);\r\n            jsonWriter.WriteNumber(\"id\", (global::System.Int32)entityId.Value);\r\n            jsonWriter.WriteEndObject();\r\n            jsonWriter.Flush();\r\n            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);\r\n        }\r\n    }\r\n\r\n    [global::System.CodeDom.Compiler.GeneratedCode(\"StrawberryShake\", \"12.9.0.0\")]\r\n    public partial class PlanetwideApiStoreAccessor : global::StrawberryShake.StoreAccessor\r\n    {\r\n        public PlanetwideApiStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories) : base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)\r\n        {\r\n        }\r\n    }\r\n}\n","Kind":0,"Hash":null,"Path":null}]