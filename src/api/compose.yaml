services:
  gateway:
    environment:
      - Graphql:Endpoint:GatewayHealth=http://gateway/Health/
      - Graphql:Endpoint:Accounts=http://accounts.api/graphql/
      - Graphql:Endpoint:Members=http://members.api/graphql/
      - Graphql:Endpoint:Transactions=http://transactions.api/graphql/
      - Graphql:Endpoint:Prompts=http://prompts.api/graphql/
    build:
      dockerfile: 'Planetwide.Gateway/Dockerfile'
      context: '.'
    networks:
      - gateway
    ports:
      - "9001:80"
    env_file:
      - .env

  accounts.api:
    build:
      dockerfile: 'Planetwide.Accounts.Api/Dockerfile'
      context: '.'
    networks:
      - gateway
      - microservices
    env_file:
      - .env

  members.api:
    build:
      dockerfile: 'Planetwide.Members.Api/Dockerfile'
      context: '.'
    networks:
      - gateway
      - microservices
    env_file:
      - .env

  transactions.api:
    build:
      dockerfile: 'Planetwide.Transactions.Api/Dockerfile'
      context: '.'
    networks:
      - gateway
      - microservices
    env_file:
      - .env

  prompts.api:
    build:
      dockerfile: 'Planetwide.Prompts.Api/Dockerfile'
      context: '.'
    networks:
      - gateway
      - microservices
    env_file:
      - .env

  redis:
    image: redis
    restart: always
    networks:
      - gateway

  mongo:
    image: mongo
    restart: always
    networks:
      - microservices
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  zipkin:
    image: openzipkin/zipkin
    restart: always
    networks:
      - gateway
      - microservices
    ports:
      - "9411:9411"

networks:
  gateway:
    name: gatewate-to-microservices
  microservices:
    name: microservices-to-databases
